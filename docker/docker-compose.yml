version: "3.5"
services:
  redis:
    image: redis:5.0-alpine
    container_name: redis
    hostname: redis
    volumes:
      - ./data/redis:/data:rw
  zookeeper:
    image: zookeeper:3.4.13
    container_name: zookeeper
    hostname: zookeeper
    volumes:
      - ./data/zookeeper/data:/datalog
      - ./data/zookeeper/log:/data
  kafka:
    image: wurstmeister/kafka:2.12-2.3.0
    container_name: kafka
    hostname: kafka
    environment:
      #KAFKA_BROKER_ID: 1
      KAFKA_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 1000
      KAFKA_OFFSETS_RETENTION_MINUTES: 20160
      KAFKA_HEAP_OPTS: "-Xmx256M -Xms256M"
      KAFKA_LOG_DIRS: /kafka/log
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
    depends_on:
      - zookeeper
    volumes:
      - ./data/kafka/data:/kafka:rw
      - ./data/kafka/log:/opt/kafka/logs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
  kafkahq:
    image: tchiotludo/kafkahq
    container_name: kafkahq
    hostname: kafkahq
    labels:
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:kafkahq.docker.localhost"
    depends_on:
      - kafka
    volumes:
      - ./kafkahq/kafkahq.conf:/app/application.conf:ro
  graphite:
    build: graphite
    image: mygraphite:latest
    container_name: graphite
    hostname: graphite
    user: root
    labels:
      - "traefik.port=80"
      - "traefik.frontend.rule=Host:graphite.docker.localhost"
    volumes:
      - ./data/graphite:/opt/graphite/storage/whisper:rw
  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    user: root
    labels:
      - "traefik.port=3000"
      - "traefik.frontend.rule=Host:grafana.docker.localhost"
    links:
      - graphite
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/:rw
      - ./data/grafana:/var/lib/grafana:rw
  traefik:
    image: traefik:latest
    command: --api --docker
    ports:
      - 80:80
    labels:
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:traefik.docker.localhost"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  rest:
    image: local/acme-rest:1.0-SNAPSHOT
    restart: always
    depends_on:
      - kafka
      - redis
      - graphite
    environment:
      KAFKA_ENABLED: "true"
      KAFKA_URL: "kafka:9092"
      KAFKA_PREFIX: "msp-"
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      REDIS_PREFIX: "msp:"
      METRICS_GRAPHITE_ENABLED: "true"
      METRICS_LOG4J_ENABLED: "true"
      METRICS_GRAPHITE_HOST: "graphite"
      METRICS_GRAPHITE_PORT: 2003
      METRICS.GRAPHITE.PERIOD: 30
      METRICS.GRAPHITE.PERIOD: 30
    labels:
      - "traefik.http.frontend.rule=Host:acme.docker.localhost"
      - "traefik.http.port=8080"
      - "traefik.backend.healthcheck.path=/health"
      - "traefik.backend.healthcheck.port=8080"
      - "traefik.backend.healthcheck.interval=10s"
  processor:
    image: local/acme-processor:1.0-SNAPSHOT
    restart: always
    depends_on:
      - kafka
      - rest
      - redis
      - graphite
    environment:
      KAFKA_ENABLED: "true"
      KAFKA_URL: "kafka:9092"
      KAFKA_PREFIX: "msp-"
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      REDIS_PREFIX: "msp:"
      COMPUTATION_COUNTER_CONCURRENCY: 0
      COMPUTATION_ACME_CONCURRENCY: 4
      METRICS_GRAPHITE_ENABLED: "true"
      METRICS_LOG4J_ENABLED: "true"
      METRICS_GRAPHITE_HOST: "graphite"
      METRICS_GRAPHITE_PORT: 2003
      METRICS.GRAPHITE.PERIOD: 30
    labels:
      - "traefik.http.frontend.rule=Host:processor.docker.localhost"
      - "traefik.http.port=8080"
      - "traefik.backend.healthcheck.path=/health"
      - "traefik.backend.healthcheck.port=8080"
      - "traefik.backend.healthcheck.interval=10s"
  instrument:
    image: local/acme-processor:1.0-SNAPSHOT
    restart: always
    depends_on:
      - kafka
      - rest
      - redis
      - graphite
    environment:
      KAFKA_ENABLED: "true"
      KAFKA_URL: "kafka:9092"
      KAFKA_PREFIX: "msp-"
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      REDIS_PREFIX: "msp:"
      COMPUTATION_COUNTER_CONCURRENCY: 2
      COMPUTATION_COUNTER_BATCH_CAPACITY: 50
      COMPUTATION_COUNTER_BATCH_THRESHOLD: "1s"
      COMPUTATION_ACME_CONCURRENCY: 0
      METRICS_GRAPHITE_ENABLED: "true"
      METRICS_LOG4J_ENABLED: "true"
      METRICS_GRAPHITE_HOST: "graphite"
      METRICS_GRAPHITE_PORT: 2003
      METRICS.GRAPHITE.PERIOD: 30
    labels:
      - "traefik.http.frontend.rule=Host:instrument.docker.localhost"
      - "traefik.http.port=8080"
      - "traefik.backend.healthcheck.path=/health"
      - "traefik.backend.healthcheck.port=8080"
      - "traefik.backend.healthcheck.interval=10s"
  stream-sh:
    image: local/stream-sh:1.0-SNAPSHOT
    restart: always
    depends_on:
      - kafka
      - rest
      - redis
      - graphite
      - processor
    environment:
      METRICS_GRAPHITE_PORT: 2003
      METRICS.GRAPHITE.PERIOD: 30
    # command: lag -k --kafka /kafka-config.xml
    command: monitor -k --kafka /kafka-config.xml --codec avro -l ALL -i 30 --host graphite --port 2003
    volumes:
      - ./stream-sh/kafka-config.xml:/kafka-config.xml:ro
