version: "3.5"
services:
  zookeeper:
    image: zookeeper:3.4.13
    container_name: zookeeper
    hostname: zookeeper
    volumes:
      - ./data/zookeeper/data:/datalog
      - ./data/zookeeper/log:/data
  kafka:
    image: wurstmeister/kafka:2.12-2.3.0
    container_name: kafka
    hostname: kafka
    environment:
      #KAFKA_BROKER_ID: 1
      KAFKA_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 10
      KAFKA_OFFSETS_RETENTION_MINUTES: 20160
      KAFKA_HEAP_OPTS: "-Xmx256M -Xms256M"
      KAFKA_LOG_DIRS: /kafka/log
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
    depends_on:
      - zookeeper
    volumes:
      - ./data/kafka/data:/kafka:rw
      - ./data/kafka/log:/opt/kafka/log:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
  kafkahq:
    image: tchiotludo/kafkahq
    container_name: kafkahq
    hostname: kafkahq
    labels:
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:kafkahq.docker.localhost"
    depends_on:
      - kafka
    volumes:
      - ./kafkahq/kafkahq.conf:/app/application.conf:ro
  producer:
    # image: msp/producer:latest
    build: 
      context: nuxeo-producer
      dockerfile: src/main/docker/Dockerfile-JDK
    depends_on:
      - kafka
    environment:
      KAFKA_ENABLED: "true"
      KAFKA_URL: kafka:9092
    labels:
      - "traefik.http.frontend.rule=Host:producer.docker.localhost"
      - "traefik.http.port=8080"
      - "traefik.backend.healthcheck.path=/health"
      - "traefik.backend.healthcheck.port=8080"
      - "traefik.backend.healthcheck.interval=10s"
  processor:
    # image: msp/processor:latest
    build:
      context: nuxeo-processor
      dockerfile: src/main/docker/Dockerfile-JDK
    depends_on:
      - kafka
    environment:
      KAFKA_ENABLED: "true"
      KAFKA_URL: kafka:9092
    labels:
      - "traefik.http.frontend.rule=Host:processor.docker.localhost"
      - "traefik.http.port=8080"
      - "traefik.backend.healthcheck.path=/health"
      - "traefik.backend.healthcheck.port=8080"
      - "traefik.backend.healthcheck.interval=10s"
  traefik:
    image: traefik:latest
    command: --api --docker
    ports:
      - 80:80
    labels:
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:traefik.docker.localhost"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
